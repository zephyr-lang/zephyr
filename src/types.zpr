import "src/ast.zpr";

var INT_TYPE: Type*;
var UINT_TYPE: Type*;
var I8_TYPE: Type*;
var STR_TYPE: Type*;
var F64_TYPE: Type*;
var VOID_TYPE: Type*;
var ANY_TYPE: Type*;
var ANYP_TYPE: Type*;

function copy_type(a: Type*): Type* {
	var copy = new Type;
	copy.type = a.type;
	copy.indirection = a.indirection;
	copy.name = a.name;
	copy.fields = a.fields;
	copy.methods = a.methods;
	return copy;
}

function build_types() {
	INT_TYPE = new Type;
	INT_TYPE.type = DataType::INT;

	UINT_TYPE = new Type;
	UINT_TYPE.type = DataType::UINT;

	I8_TYPE = new Type;
	I8_TYPE.type = DataType::I8;

	STR_TYPE = new Type;
	STR_TYPE.type = DataType::I8;
	STR_TYPE.indirection = 1;

	F64_TYPE = new Type;
	F64_TYPE.type = DataType::F64;

	VOID_TYPE = new Type;
	VOID_TYPE.type = DataType::VOID;

	ANY_TYPE = new Type;
	ANY_TYPE.type = DataType::ANY;

	ANYP_TYPE = new Type;
	ANYP_TYPE.type = DataType::ANY;
	ANYP_TYPE.indirection = 1;
}